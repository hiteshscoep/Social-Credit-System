# -*- coding: utf-8 -*-
"""Hackathon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e-ZQFz2IOpYjqlGGZSswq_M1oXH1tdg4
"""

from matplotlib import pyplot as plt
import numpy as np
import pandas as pd
import random
from tkinter import *
from PIL import ImageTk, Image
from tkinter import messagebox
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg, NavigationToolbar2Tk)

top = Tk()
top.title("Welcome to Social Secruity System")
top.geometry("480x120")

def authorise():
    getuser = username.get()
    getpass = password.get()
    users = ['gautamp', 'hiteshs']
    passwords = ['qwerty', '12345678']
    if getuser in users and getpass in passwords:
        def system():
            name = names.get()
            familyData = pd.read_csv(r'PersonalDetails.csv')
            financials = pd.read_csv(r'FinancialDetails.csv')
            criminalRecord = pd.read_csv(r'CriminalDetails.csv')
            name1 = familyData['Name'].tolist()
            if name in name1: 
                indexNo = name1.index(name)
            if name in name1:
                def personal():
                    commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                    Label(tsystem,text="Name:",font="none 20", bg='pink').place(x=0,y=0)  
                    Label(tsystem,text=name,font="none 20", bg='pink').place(x = 100, y = 0)
                    Label(tsystem,text='Age:',font="none 20", bg='pink').place(x =0, y = 100)
                    Label(tsystem,text=familyData.loc[indexNo]['Age'],font="none 20", bg='pink').place(x = 90, y = 100)
                    Label(tsystem,text='City:',font="none 20", bg='pink').place(x =0, y = 200) 
                    Label(tsystem,text=familyData.loc[indexNo]['City'],font="none 20", bg='pink').place(x =90, y = 200)   
                    Label(tsystem,text='Job:',font="none 20", bg='pink').place(x =0, y = 300) 
                    Label(tsystem,text=familyData.loc[indexNo]['Job'],font="none 20", bg='pink').place(x =90, y = 300)   
                    Label(tsystem,text='Education Qualifications :',font="none 20", bg='pink').place(x =0, y = 400)    
                    Label(tsystem,text=familyData.loc[indexNo]['EducationalQualification'],font="none 20", bg='pink').place(x =350, y = 400) 
                    Label(tsystem,text='Time spent with family per week(hours):',font="none 20", bg='pink').place(x =0, y = 500)
                    Label(tsystem,text=familyData.loc[indexNo]['Time spent with family per week(hr)'],font="none 20", bg='pink').place(x =500, y = 500)
                def finance():
                    commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                    Label(tsystem,text='2020 Data',font="none 40", bg='pink').place(x =200, y = 0)
                    Label(tsystem,text='2021 Data',font="none 40", bg='pink').place(x =680, y = 0)
                    Label(tsystem,text='2022 Data',font="none 40", bg='pink').place(x =1160, y = 0)
                    Label(tsystem,text='Salary(Rs)',font="none 20", bg='pink').place(x = 20, y = 100)
                    Label(tsystem,text=financials.loc[indexNo]['Salary2020'] * 100000,font="none 20", bg='pink').place(x = 200, y = 100)
                    Label(tsystem,text=financials.loc[indexNo]['Salary2021'] * 100000,font="none 20", bg='pink').place(x = 680, y = 100)
                    Label(tsystem,text=financials.loc[indexNo]['Salary2022'] * 100000,font="none 20", bg='pink').place(x = 1160, y = 100)
                    Label(tsystem,text='Tax(Rs)',font="none 20", bg='pink').place(x = 20, y = 200)
                    Label(tsystem,text=int(financials.loc[indexNo]['Tax2020'] * 100000),font="none 20", bg='pink').place(x = 200, y = 200)
                    Label(tsystem,text=int(financials.loc[indexNo]['Tax2021'] * 100000),font="none 20", bg='pink').place(x = 680, y = 200)
                    Label(tsystem,text=int(financials.loc[indexNo]['Tax2022'] * 100000),font="none 20", bg='pink').place(x = 1160, y = 200)
                    Label(tsystem,text='Tax Paid(Rs)',font="none 20", bg='pink').place(x = 20, y = 300)
                    Label(tsystem,text=int(financials.loc[indexNo]['TaxPaid2020'] * 100000),font="none 20", bg='pink').place(x = 200, y = 300)
                    Label(tsystem,text=int(financials.loc[indexNo]['TaxPaid2021'] * 100000),font="none 20", bg='pink').place(x = 680, y = 300)
                    Label(tsystem,text=int(financials.loc[indexNo]['TaxPaid2022'] * 100000),font="none 20", bg='pink').place(x = 1160, y = 300)

                def crime():
                    commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                    Label(tsystem,text="2020",font="none 50",bg='pink').place(x=200,y=0)
                    Label(tsystem,text="2021",font="none 50",bg='pink').place(x=600,y=0)
                    Label(tsystem,text="2022",font="none 50",bg='pink').place(x=1180,y=0)
                    Label(tsystem,text="Description of Crime",font="none 10", bg='pink').place(x=20,y=110)  
                    Label(tsystem,text=criminalRecord.loc[indexNo]['Description2020'],font="none 20", bg='pink').place(x = 200, y = 100)
                    Label(tsystem,text=criminalRecord.loc[indexNo]['Description2021'],font="none 20", bg='pink').place(x = 600, y = 100)
                    Label(tsystem,text=criminalRecord.loc[indexNo]['DescriptionofCrime2022'],font="none 20", bg='pink').place(x = 1160, y = 100)
                    Label(tsystem,text="Sentence for the following year",font="none 10", bg='pink').place(x=0,y=212)
                    Label(tsystem,text=criminalRecord.loc[indexNo]['Sentence2020'],font="none 20", bg='pink').place(x = 200, y = 200)
                    Label(tsystem,text=criminalRecord.loc[indexNo]['Sentence2021'],font="none 20", bg='pink').place(x = 600, y = 200)
                    Label(tsystem,text=criminalRecord.loc[indexNo]['Sentence2022'],font="none 20", bg='pink').place(x = 1160, y = 200)
                def credit():
                    commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                    global creditScore
                    def creditScore(name, year):
                        financials = pd.read_csv(r'C:\Users\gauta\OneDrive\Desktop\hackathon\FinancialDetails.csv')
                        criminalRecord = pd.read_csv(r'C:\Users\gauta\OneDrive\Desktop\hackathon\CriminalDetails.csv')

                        names = familyData['Name'].tolist()
                        indexNo = names.index(name)

                        jobs = familyData['Job'].tolist()
                        uniqueJobs = []
                        for i in jobs:
                            if i not in uniqueJobs:
                                uniqueJobs.append(i)
                        jobDict = dict(zip(uniqueJobs, [200, 100, 300, 400, 750, 50, 0]))
                        userJob = jobs[indexNo]

                        education = familyData['EducationalQualification']
                        uniqueEducation = []
                        for i in education:
                            if i not in uniqueEducation:
                                uniqueEducation.append(i)
    
                        userEdu = education[indexNo]
                        educationDict = dict(zip(uniqueEducation, [150, 0, 100, 100, 200, 70, 60, 70])) 

                        familyHrs = familyData['Time spent with family per week(hr)'].tolist()
                        userFamily = familyHrs[indexNo]

                        salary = financials.loc[indexNo, ['Salary2022', 'Salary2021', 'Salary2020']].tolist()
                        tax = financials.loc[indexNo, ['Tax2022', 'Tax2021', 'Tax2020']].tolist()
                        taxPaid = financials.loc[indexNo, ['TaxPaid2022', 'TaxPaid2021', 'TaxPaid2020']].tolist()

                        sentences = criminalRecord.loc[indexNo, ['Sentence2022', 'Sentence2021', 'Sentence2020']].tolist()

                        s1 = jobDict[userJob]

                        if userJob == 'Student':
                            s2 = educationDict[userEdu]/2
                            s3 = 100 / userFamily
                            s4 = 200
                            s5 = 0
                        else:
                            s2 = educationDict[userEdu]
                            s3 = 200 / userFamily
                            if salary[year % 3] == 0:
                                s4 = 500
                                s5 = 0
                            else:
                                s4 = 750 / salary[year % 3]
                                if taxPaid[year % 3] == 0:
                                    s5 = 700
                                elif (taxPaid[year % 3]) / (tax[year % 3]) == 1:
                                    s5 = 0
                                else:
                                    s5 = 100 / ((taxPaid[year % 3]) / (tax[year % 3]))
                        if sentences[year % 3] != 'none':
                            s6 = 300
                        else:
                            s6 = 0

                        showcredit = 2500 - (s1 + s2 + s3 + s4 + s5 + s6)
                        
                        global creditLabel
                        Label(tsystem,text="Your credit score for year 2022 is:",bg="pink",font="none 15").place(x=550,y=50)
                        Label(tsystem, text = int(showcredit), bg = 'pink', fg = '#660066', font = 'Arial, 150').place(x = 550, y = 200)

                        if showcredit > 1500:
                            Label(tsystem,text="For a high credit score, citizen will receive following benefits: \n 1) Tax benefits \n 2) Priority for Emploment",bg="pink",font="none 15").place(x=550,y=500)
                        elif showcredit < 1500 and showcredit > 1000:
                            Label(tsystem,text="For an average credit score, citizen will receive following benefits: \n 1) Small Tax Concession 2) Discounted Groceries",bg="pink",font="none 15").place(x=550,y=500)
                        else:
                            Label(tsystem,text="For a low credit score, citizen will be punished as follows: \n  1)Denial of licenses,permits and government jobs\n 2)Restricted access to loans and other baking services",bg="pink",font=" none 15 ").place(x=500,y=500)
                        return 2500 - (s1 + s2 + s3 + s4 + s5 + s6)
                        
                    creditScore(name, 2022)
                def graph():
                    scores = [creditScore(name, 2020), creditScore(name, 2021), creditScore(name, 2022)]
                    commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                    fig = Figure(figsize = (5, 5), dpi = 100)
                    plot1 = fig.add_subplot(111)
                    plot1.plot(scores)
                    plot1.set_xticks([0, 1, 2], [2020, 2021, 2022])
                    canvas = FigureCanvasTkAgg(fig,master = tsystem)  
                    canvas.draw()
                    toolbar = NavigationToolbar2Tk(canvas,tsystem)
                    toolbar.update()
                    canvas.get_tk_widget().pack()

                tname.destroy()
                tsystem = Tk()
                tsystem.title("Credit System with details")
                tsystem.geometry("1600x900")
                tsystem.configure(background='pink')
                menubar = Menu(tsystem)  
                menubar.add_command(label = "Personal details", command = personal)  
                menubar.add_command(label = "Financial creditworthiness", command = finance) 
                menubar.add_command(label = "Judicial enforcements", command = crime)               
                menubar.add_command(label = "Credit Score for 2022", command = credit)
                menubar.add_command(label = "Past 5 year credit score records", command = graph)
                commonwash = Label(tsystem, text = "\t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n", bg = "pink", padx = 140, pady = 140).place(x = 0,y = 0)
                Label(tsystem,text="Name:",font="none 20", bg='pink').place(x=0,y=0)  
                Label(tsystem,text=name,font="none 20", bg='pink').place(x = 100, y = 0)
                Label(tsystem,text='Age:',font="none 20", bg='pink').place(x =0, y = 100)
                Label(tsystem,text=familyData.loc[indexNo]['Age'],font="none 20", bg='pink').place(x = 90, y = 100)
                Label(tsystem,text='City:',font="none 20", bg='pink').place(x =0, y = 200) 
                Label(tsystem,text=familyData.loc[indexNo]['City'],font="none 20", bg='pink').place(x =90, y = 200)   
                Label(tsystem,text='Job:',font="none 20", bg='pink').place(x =0, y = 300) 
                Label(tsystem,text=familyData.loc[indexNo]['Job'],font="none 20", bg='pink').place(x =90, y = 300)   
                Label(tsystem,text='Education Qualifications :',font="none 20", bg='pink').place(x =0, y = 400)    
                Label(tsystem,text=familyData.loc[indexNo]['EducationalQualification'],font="none 20", bg='pink').place(x =350, y = 400) 
                Label(tsystem,text='Time spent with family per week(hours):',font="none 20", bg='pink').place(x =0, y = 500)
                Label(tsystem,text=familyData.loc[indexNo]['Time spent with family per week(hr)'],font="none 20", bg='pink').place(x =500, y = 500)
                # display the menu  
                tsystem.config(menu = menubar)  
                  
                tsystem.mainloop() 
            else:
                messagebox.showerror("Enter valid name!","Name SHOULD be from database")
        top.destroy()
        tname = Tk()
        tname.title("Name Entry")
        tname.geometry("500x100")
        Label(tname, text = "Enter name of person").place(x = 0,y = 0)
        Label(tname, text = "(Note that name of person should be in database)", font = "none -10").place(x = 0,y = 30)
        names = Entry(tname)
        names.place(x = 200, y = 10)
        names.pack()
        Button(tname, text = "Next",command = system).place(x = 210,y = 55)
    else:
        messagebox.showerror("ERROR!","Username/Password are wrong")
Label(top, text = "Username").place(x = 75,y = 0)
username = Entry(top)
username.place(x = 90, y = 70)
username.pack()
Label(top,text = "Password").place(x = 75,y = 25)
password = Entry(top,show = '*')
password.place(x = 90, y = 100)
password.pack()
Button(top,text = "Next", command = authorise).place(x = 200,y = 65) 
top.mainloop()